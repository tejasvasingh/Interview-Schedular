{"version":3,"sources":["Component/DarkModeSwitch.js","Component/Detail.js","Redux/Actions/action.js","Component/Home.js","Component/AddContact.js","Component/EditContact.js","App.js","reportWebVitals.js","Redux/Reducer/contextReducer.js","index.js"],"names":["DarkModeSwitch","props","useDisclosure","isOpen","onOpen","onClose","useColorMode","colorMode","toggleColorMode","as","align","justify","wrap","padding","bg","color","mr","size","letterSpacing","display","base","md","onClick","Hamburger","direction","width","alignItems","flexGrow","mt","to","variant","_hover","borderColor","mx","icon","style","isRound","alignSelf","Detail","state","toggle","this","setState","email","delete","toast","success","position","POSITION","BOTTOM_CENTER","trig","name","status","colorScheme","trigger","onDel","onFire","my","border","fontSize","number","time","date","intervew","React","Component","connect","data","dispatch","type","payload","deleteContact","editStatus","Home","undone","filter","row","done","p","mg","fontWeight","bgGradient","bgClip","divider","maxW","sm","lg","xl","isFitted","mb","borderWidth","borderRadius","length","m","map","task","id","timing","interviewer","AddContact","phone","intrvr_name","em","includes","error","i","t","tint","parseInt","substr","res","change","history","push","console","log","minHeight","justifyContent","px","maxWidth","textAlign","boxShadow","isRequired","placeholder","value","onChange","e","target","compose","withRouter","addContact","EditContact","prev_email","match","params","edited_data","x","temp","editContact","configure","App","className","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","contextReducer","action","idx","forEach","ans","idx1","ans2","store","createStore","ReactDOM","render","initialColorMode","document","getElementById"],"mappings":"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","file":"static/js/main.bc5de2fc.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Box,\r\n  Stack,\r\n  Heading,\r\n  Flex,\r\n  Text,\r\n  Button,\r\n  useDisclosure\r\n} from \"@chakra-ui/react\";\r\nimport { HamburgerIcon } from \"@chakra-ui/icons\";\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport {IconButton,useColorMode } from \"@chakra-ui/react\";\r\nimport {FaSun,FaMoon} from 'react-icons/fa';\r\n\r\n\r\nconst DarkModeSwitch = (props) => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const handleToggle = () => (isOpen ? onClose() : onOpen());\r\n  const {colorMode , toggleColorMode}=useColorMode();\r\n  let iconStyles = { color: \"black\" };\r\n  return (\r\n    <Flex\r\n      as=\"nav\"\r\n      align=\"center\"\r\n      justify=\"space-between\"\r\n      wrap=\"wrap\"\r\n      padding={6}\r\n      bg=\"teal.500\"\r\n      color=\"white\"\r\n      {...props}\r\n    >\r\n      <Flex align=\"center\" mr={5}>\r\n        <Heading as=\"h1\" size=\"lg\" letterSpacing={\"tighter\"}>\r\n          Interview Schedular\r\n        </Heading>\r\n      </Flex>\r\n\r\n      <Box display={{ base: \"block\", md: \"none\" }} onClick={handleToggle}>\r\n        <HamburgerIcon />\r\n      </Box>\r\n\r\n      <Stack\r\n        direction={{ base: \"column\", md: \"row\" }}\r\n        display={{ base: isOpen ? \"block\" : \"none\", md: \"flex\" }}\r\n        width={{ base: \"full\", md: \"auto\" }}\r\n        alignItems=\"center\"\r\n        flexGrow={1}\r\n        mt={{ base: 4, md: 0 }}\r\n      >\r\n        <Text>Docs</Text>\r\n        <Text>Examples</Text>\r\n        <Text>Blog</Text>\r\n      </Stack>\r\n\r\n      <Box\r\n        display={{ base: isOpen ? \"block\" : \"none\", md: \"block\" }}\r\n        mt={{ base: 4, md: 0 }}\r\n      >\r\n      <Link to=\"/add\">\r\n            <Button\r\n                variant=\"outline\"\r\n                _hover={{ bg: \"teal.700\", borderColor: \"teal.700\" }}\r\n                >\r\n                Add Contact\r\n            </Button>\r\n      </Link>\r\n      <IconButton mx=\"8\" icon={colorMode==='light'?<FaSun style={iconStyles}/>:<FaMoon/> } isRound='true' size='lg' alignSelf='flex-end' onClick={toggleColorMode}/>\r\n      </Box>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default DarkModeSwitch;\r\n","import React from 'react';\r\nimport {Box, Heading } from '@chakra-ui/react';\r\nimport { HStack ,Text,IconButton,Spacer} from '@chakra-ui/react';\r\nimport {FaTrash,FaEdit,FaArrowDown,FaArrowUp,FaMailBulk,FaPhoneSquareAlt,FaCalendarAlt,FaClock,FaUserAlt} from \"react-icons/fa\";\r\nimport {deleteContact} from '../Redux/Actions/action';\r\nimport {connect} from 'react-redux';\r\nimport { MdDone,MdDoneAll } from \"react-icons/md\";\r\nimport {Link} from 'react-router-dom';\r\nimport {toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport {\r\n    Popover,\r\n    PopoverTrigger,\r\n    PopoverContent,\r\n    PopoverHeader,\r\n    PopoverBody,\r\n    PopoverArrow,\r\n    PopoverCloseButton,\r\n    Portal,\r\n    Button\r\n  } from \"@chakra-ui/react\"\r\nimport {\r\n    Tag,\r\n    TagLabel,\r\n} from \"@chakra-ui/react\"\r\nimport {editStatus} from \"../Redux/Actions/action\";\r\nclass Detail extends React.Component{\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            toggle:false,\r\n        }\r\n    }\r\n    onFire(){\r\n        this.setState({\r\n            toggle:!this.state.toggle,\r\n        })\r\n    }\r\n    onDel(email){\r\n        this.props.delete(email);//calling dispather\r\n        toast.success(\"Deleted Sucusfully\",{position :toast.POSITION.BOTTOM_CENTER});\r\n    }\r\n    trigger(email){\r\n        this.props.trig(email);\r\n    }\r\n    \r\n    render(){\r\n        const {toggle} = this.state;\r\n        return(\r\n            <Box>\r\n                <HStack >\r\n                    <Heading size=\"lg\">{this.props.name}</Heading> \r\n                    <Spacer/>  \r\n                    {\r\n                        this.props.status ? <Tag size=\"md\"  variant=\"outline\" colorScheme=\"red\" >\r\n                        <TagLabel>Completed</TagLabel>\r\n                    </Tag>:<Tag size=\"md\"  variant=\"outline\" colorScheme=\"green\">\r\n                        <TagLabel>Upcoming</TagLabel>\r\n                    </Tag>\r\n                    }\r\n                    <IconButton isRound=\"true\"  icon={this.props.status?<MdDoneAll/>:<MdDone/>} onClick={()=>{this.trigger(this.props.email)}}/>\r\n                    <Link to={`/edit/${this.props.email}`} ><IconButton isRound=\"true\"  icon={<FaEdit/>} /></Link>\r\n\r\n                    <Popover>\r\n                    <PopoverTrigger>\r\n                        <IconButton isRound=\"true\"  icon={<FaTrash/>}/>\r\n                    </PopoverTrigger>\r\n                    <Portal>\r\n                        <PopoverContent>\r\n                        <PopoverArrow />\r\n                        <PopoverHeader>Are You Sure Want To Delete This Candidate!!</PopoverHeader>\r\n                        <PopoverCloseButton />\r\n                        <PopoverBody>\r\n                            <Button colorScheme=\"red\" onClick={()=>{this.onDel(this.props.email)}}>Delete</Button>\r\n                        </PopoverBody>\r\n                        {/* <PopoverFooter>This is the footer</PopoverFooter> */}\r\n                        </PopoverContent>\r\n                    </Portal>\r\n                    </Popover>\r\n                    <IconButton isRound=\"true\"  icon={toggle?<FaArrowUp/>:<FaArrowDown/>} \r\n                        onClick={()=>{this.onFire()}}\r\n                      />\r\n                </HStack>\r\n                {\r\n                    toggle ?  <Box>\r\n                        <HStack my={2} border=\"1px\" borderColor=\"gray.200\">\r\n                            <IconButton  icon={<FaMailBulk/>} />\r\n                            <Text fontSize=\"xl\">{this.props.email}</Text>\r\n                        </HStack>\r\n\r\n                        <HStack my={2} border=\"1px\" borderColor=\"gray.200\">\r\n                            <IconButton  icon={<FaPhoneSquareAlt/>} />\r\n                            <Text fontSize=\"xl\">{this.props.number}</Text>\r\n                        </HStack>\r\n                        <HStack my={2} border=\"1px\" borderColor=\"gray.200\">\r\n                            <IconButton  icon={<FaClock/>} />\r\n                            <Text fontSize=\"xl\">{`${this.props.time} O'clock`}</Text>\r\n                        </HStack>\r\n                        <HStack my={2} border=\"1px\" borderColor=\"gray.200\">\r\n                            <IconButton  icon={<FaCalendarAlt/>} />\r\n                            <Text fontSize=\"xl\">{`${this.props.date}`}</Text>\r\n                        </HStack>\r\n                        <HStack my={2} border=\"1px\" borderColor=\"gray.200\">\r\n                            <IconButton  icon={<FaUserAlt/>} />\r\n                            <Text fontSize=\"xl\">{this.props.intervew}</Text>\r\n                        </HStack>\r\n                    </Box> :null\r\n                }\r\n            </Box>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state)=>{\r\n    return{\r\n        data:state,\r\n    }\r\n}\r\nconst mapDispatchToProps=(dispatch)=>{\r\n    return{\r\n        delete:(email)=>{dispatch(deleteContact(email))},\r\n        trig:(email)=>{dispatch(editStatus(email))}\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Detail);","export const addContact=(data)=>{\r\n    return{\r\n        type:\"ADD_CANDIDTATE\",\r\n        payload:data,\r\n    }\r\n}\r\nexport const deleteContact=(email)=>{\r\n     return{\r\n         type:\"DELETE_CONTACT\",\r\n         payload:email,\r\n     }\r\n}\r\nexport const editContact=(data)=>{\r\n    return{\r\n        type:\"EDIT_CONTACT\",\r\n        payload:data,\r\n    }\r\n}\r\nexport const editStatus=(email)=>{\r\n    return{\r\n        type:\"EDIT_STATUS\",\r\n        payload:email,\r\n    }\r\n}","\r\nimport React from \"react\";\r\nimport {Heading } from '@chakra-ui/react';\r\nimport {VStack}from '@chakra-ui/react';\r\nimport { StackDivider,Badge} from '@chakra-ui/react';\r\nimport Detail from './Detail';\r\nimport {connect} from 'react-redux';\r\nimport { Tabs,TabList, TabPanels, Tab, TabPanel } from \"@chakra-ui/react\"\r\nclass Home extends React.Component{\r\n    render(){\r\n        const {data} = this.props;\r\n        //console.log(data);\r\n        const undone=data.filter(\r\n            (row) =>row.status === false\r\n        );\r\n        const done=data.filter(\r\n            (row) =>row.status === true\r\n        );\r\n        return(\r\n            <VStack p={8}>\r\n                <Heading mg='8' my='5' fontWeight='extrabold' size='2xl' bgGradient=\"linear(to-r,red.500,red.300,blue.500)\" bgClip='text'>\r\n                    Candidate List\r\n                </Heading>\r\n                <VStack divider={<StackDivider/>}    width=\"100%\" maxW={{base:'90vw' ,sm:'80vw' ,lg:'50vw' ,xl:'50vw'}} alignItems=\"st\">\r\n                    <Tabs isFitted variant=\"enclosed\">\r\n                        <TabList mb=\"1em\">\r\n                            <Tab>Upcoming</Tab>\r\n                            <Tab>Completed</Tab>\r\n                        </TabList>\r\n                        <TabPanels>\r\n                            <TabPanel>\r\n                                <VStack divider={<StackDivider/>} borderColor='grey.100' borderWidth='2px'  borderRadius='lg' width=\"100%\" maxW={{base:'90vw' ,sm:'80vw' ,lg:'50vw' ,xl:'50vw'}} alignItems=\"st\">\r\n                                {\r\n                                    undone.length===0 ? <Badge variant=\"solid\" colorScheme=\"purple\" p='4' m='4' borderRadius='lg'>\r\n                                                            No Candidate !!  \r\n                                                        </Badge> : \r\n                                    undone.map((task,id)=>(\r\n                                    <Detail status={task.status} key={id} name={task.name} email={task.email} number={task.number} date={task.date} time={task.timing} intervew={task.interviewer} /> \r\n                                    ))\r\n                                }\r\n                                </VStack>\r\n                            </TabPanel>\r\n                            <TabPanel>\r\n                                <VStack divider={<StackDivider/>} borderColor='grey.100' borderWidth='2px'  borderRadius='lg' width=\"100%\" maxW={{base:'90vw' ,sm:'80vw' ,lg:'50vw' ,xl:'50vw'}} alignItems=\"st\">\r\n                                {\r\n                                    done.length===0 ? <Badge variant=\"solid\" colorScheme=\"purple\" p='4' m='4' borderRadius='lg'>\r\n                                                            Empty !!  \r\n                                                        </Badge> : \r\n                                    done.map((task,id)=>(\r\n                                    <Detail status={task.status} key={id} name={task.name} email={task.email} number={task.number} date={task.date} time={task.timing} intervew={task.interviewer} /> \r\n                                    ))\r\n                                }\r\n                                </VStack>\r\n                            </TabPanel>\r\n                        </TabPanels>\r\n                    </Tabs>\r\n                </VStack>\r\n            </VStack> \r\n        )\r\n\r\n\r\n        //console.log(data);\r\n        // if(data.length===0){\r\n        //     return(\r\n        //         <VStack p={8}>\r\n        //             <Heading mg='8' my='5' fontWeight='extrabold' size='2xl' bgGradient=\"linear(to-r,red.500,red.300,blue.500)\" bgClip='text'>\r\n        //                 Candidate List\r\n        //             </Heading>\r\n        //             <Badge variant=\"solid\" colorScheme=\"purple\" p='4' m='4' borderRadius='lg'>\r\n        //                 No Candidate !!  \r\n        //             </Badge>\r\n        //         </VStack>\r\n        //     );\r\n        // }\r\n        // return(\r\n        //     <VStack p={8}>\r\n        //         <Heading mg='8' my='5' fontWeight='extrabold' size='2xl' bgGradient=\"linear(to-r,red.500,red.300,blue.500)\" bgClip='text'>\r\n        //             Candidate List\r\n        //         </Heading>\r\n        //         <VStack divider={<StackDivider/>} borderColor='grey.100' borderWidth='2px'  borderRadius='lg' width=\"100%\" maxW={{base:'90vw' ,sm:'80vw' ,lg:'50vw' ,xl:'40vw'}} alignItems=\"st\">\r\n                    // {\r\n                    //     data.map((task,id)=>(\r\n                    //        <Detail id={task.id} key={id} name={task.name} email={task.email} number={task.number} date={task.date} time={task.timing} intervew={task.interviewer} /> \r\n                    //     ))\r\n                    // }\r\n        //         </VStack>\r\n        //     </VStack> \r\n        // )\r\n    }\r\n}\r\n\r\n//to read from redux\r\nconst mapStateToProps =(state)=>{\r\n    return{\r\n        data:state,\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Home);","import React from \"react\";\r\nimport {Box,Button,Flex, FormControl, FormLabel, Heading, Input} from '@chakra-ui/react';\r\nimport {connect} from 'react-redux';\r\nimport {addContact} from '../Redux/Actions/action';\r\nimport {toast} from 'react-toastify';\r\nimport { withRouter } from 'react-router-dom';\r\nimport {compose} from 'redux';\r\nclass AddContact extends React.Component{\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            name:\"\",\r\n            email:\"\",\r\n            number:\"\",\r\n            interviewer:\"\",\r\n            timing:\"\",\r\n            date:\"\",\r\n        }\r\n    }\r\n    display(){\r\n        if(this.state.name===\"\" || this.state.email===\"\" || this.state.phone===\"\" ||this.state.intrvr_name===\"\" || this.state.time===\"\" ||this.state.date===\"\"){\r\n            toast.error(\"Please Fill All Details\");\r\n            return;\r\n        }\r\n        const em=this.state.email;\r\n        if(!em.includes('@')){\r\n            toast.error(\"Email must contain '@' in it\");\r\n            return;\r\n        }\r\n        else if(!em.includes('@gmail.com') || em.includes(\" \")){\r\n            toast.error(\"Invalid  Email\");\r\n            return;\r\n        };\r\n        const {data}=this.props;\r\n        const temp=data.filter(\r\n            (row)=>row.email === em\r\n        );\r\n        if(temp.length>0){\r\n            toast.error(\"Email Alredy exist\");\r\n            return;\r\n        }\r\n        for(var i=0;i<data.length;i++){\r\n            if(data[i].date===this.state.date && data[i].timing===this.state.timing && data[i].interviewer===this.state.interviewer){\r\n                toast.error(\"This Slot Is Booked !!\");\r\n                return;\r\n            }\r\n        }\r\n        if(this.state.number.length!==10){\r\n            toast.error(\"Phone Number Must Contains 10 Digits\");\r\n            return;\r\n        }\r\n\r\n        var t=this.state.timing;\r\n        var tint=parseInt(t.substr(0,2));\r\n        if(tint< 8 || tint >21){\r\n            toast.error('Timing Should Be In Between : 08:00 - 12:00 am and 12:00 - 9:00 pm ');\r\n            return;\r\n        }\r\n        const res={...this.state,status:false};\r\n        this.props.change(res);\r\n        toast.success(\"Succesfully Added !!\",{position :toast.POSITION.BOTTOM_CENTER})\r\n        this.props.history.push(\"/\");\r\n        \r\n    }\r\n    render(){\r\n        console.log(this.state)\r\n        return(\r\n            <Flex minHeight='90vh' width='full'  justifyContent='center' mt='10'>\r\n                <Box borderWidth={1} px={4} width='full' maxWidth='500px' borderRadius={4} textAlign=\"center\" boxShadow='lg'>\r\n                    <Box textAlign=\"center\">\r\n                        <Heading fontWeight='extrabold' size='2xl' bgGradient=\"linear(to-r,red.500,red.300,blue.500)\" bgClip='text'>Add Candidate</Heading>\r\n                    </Box>\r\n                    <Box my={8}>\r\n                        <form>\r\n                            <FormControl my={4} isRequired>\r\n                                <FormLabel>Name</FormLabel>\r\n\r\n                                <Input type='text' placeholder=\"Enter Your Name\" \r\n                                    value={this.state.name} \r\n                                    onChange={(e)=>{this.setState({name:e.target.value})}}\r\n                                />\r\n                                <FormLabel>Email Adddress</FormLabel>\r\n                                <Input type=\"email\" placeholder=\"Enter Your Email Address\" \r\n                                    value={this.state.email} \r\n                                    onChange={(e)=>{this.setState({email:e.target.value})}}\r\n                                 /> \r\n                                <FormLabel>Phone Number</FormLabel>\r\n                                <Input type='text' placeholder=\"Enter Your Number\" \r\n                                     value={this.state.number} \r\n                                    onChange={(e)=>{this.setState({number:e.target.value})}}\r\n                                />\r\n                                <FormLabel>Interviewer Name</FormLabel>\r\n                                <Input type='text' placeholder=\"Enter Interviewer Name\" \r\n                                     value={this.state.interviewer} \r\n                                    onChange={(e)=>{this.setState({interviewer:e.target.value})}}\r\n                                />\r\n                                <FormLabel>Time Of Interview</FormLabel>\r\n                                <Input type=\"time\" placeholder=\"Enter Time Of Interview\" \r\n                                     value={this.state.timing} \r\n                                    onChange={(e)=>{this.setState({timing:e.target.value})}}\r\n                                />\r\n                                <FormLabel>Date Of Interview</FormLabel>\r\n                                <Input type='date' placeholder=\"Enter Date Of Interview\" \r\n                                     value={this.state.date} \r\n                                    onChange={(e)=>{this.setState({date:e.target.value})}}\r\n                                />\r\n                                \r\n                            </FormControl>\r\n                            {/* <Stack insetInline justifyContent='space-between' mt={4}>\r\n                                <HStack>\r\n                                    <Checkbox>Remember Me</Checkbox>\r\n                                </HStack>\r\n                            </Stack> */}\r\n                            <Button width='full' mt={4} colorScheme=\"teal\" variant=\"solid\" onClick={()=>{this.display()}}>\r\n                                Add component\r\n                            </Button>\r\n                        </form>\r\n                    </Box>\r\n                    </Box>\r\n                </Flex>\r\n            )\r\n        }\r\n    }\r\n// const mapDispatchToProps=(dispatch)=>{\r\n//     return{\r\n//         change:(data)=>{dispatch({type:\"CHANGE_NAME\",payload:data})}, if we want to call action directly\r\n//     }\r\n// }\r\nconst mapStateToProps=(state)=>{\r\n    return{\r\n        data:state\r\n    }\r\n}\r\nconst mapDispatchToProps=(dispatch)=>{\r\n    return {\r\n        change:(data)=>{dispatch(addContact(data))}\r\n    }\r\n}\r\nexport default compose(withRouter,connect(mapStateToProps,mapDispatchToProps))(AddContact);\r\n//export default connect(mapStateToProps,mapDispatchToProps)(AddContact);\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport {Box,Button,Flex, FormControl, FormLabel, Heading, Input} from '@chakra-ui/react';\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {connect} from 'react-redux';\r\nimport { compose } from \"redux\";\r\nimport {toast} from 'react-toastify';\r\nimport {editContact} from '../Redux/Actions/action';\r\n\r\nclass EditContact extends React.Component{\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            name:\"\",\r\n            email:\"\",\r\n            number:null,\r\n            interviewer:\"\",\r\n            timing:\"\",\r\n            date:\"\",\r\n        }\r\n    }\r\n    display(e){\r\n        if(this.state.name===\"\" || this.state.email===\"\" || this.state.phone===\"\" ||this.state.intrvr_name===\"\" || this.state.time===\"\" ||this.state.date===\"\"){\r\n            toast.error(\"Please Fill All Details\");\r\n            return;\r\n        }\r\n        const em=this.state.email;\r\n        if(!em.includes('@')){\r\n            toast.error(\"Email must contain '@' in it\");\r\n            return;\r\n        }\r\n        else if(!em.includes('@gmail.com') || em.includes(\" \")){\r\n            toast.error(\"Invalid  Email\");\r\n            return;\r\n        }\r\n        const {data}=this.props;\r\n        const temp=data.filter(\r\n            (row)=>row.email === em\r\n        );\r\n        if(temp.length>0){\r\n            toast.error(\"Email Alredy exist\");\r\n            return;\r\n        }\r\n        for(var i=0;i<data.length;i++){\r\n            if(data[i].date===this.state.date && data[i].timing===this.state.timing && data[i].interviewer===this.state.interviewer){\r\n                toast.error(\"This Slot Is Booked !!\");\r\n                return;\r\n            }\r\n        }\r\n        if(this.state.number.length!==10){\r\n            toast.error(\"Phone Number Must Contains 10 Digits\");\r\n            return;\r\n        }\r\n        var t=this.state.timing;\r\n        var tint=parseInt(t.substr(0,2));\r\n        if(tint< 8 || tint >21){\r\n            toast.error('Timing Should Be In Between : 08:00 - 12:00 am and 12:00 - 9:00 pm ');\r\n            return;\r\n        }\r\n\r\n        const res={prev_email:this.props.match.params.email,edited_data:{...this.state,status:e}};\r\n        this.props.change(res);\r\n        console.log(this.state);\r\n        toast.success(\"Successfully Edited !!\",{position :toast.POSITION.BOTTOM_CENTER})\r\n        this.props.history.push(\"/\");\r\n    }\r\n    render(){\r\n        let x=this.props.match.params.email;\r\n        const {data}=this.props;\r\n        const temp=data.filter(\r\n            (row)=>row.email === x\r\n        );\r\n        //console.log(temp);\r\n        var status=temp[0].status;\r\n        var name=temp[0].name;\r\n        var email=temp[0].email;\r\n        var number=temp[0].number;\r\n        var interviewer=temp[0].interviewer;\r\n        var timing=temp[0].timing;\r\n        var date=temp[0].date;\r\n        return(\r\n            <Flex minHeight='90vh' width='full'  justifyContent='center' mt='10'>\r\n                <Box borderWidth={1} px={4} width='full' maxWidth='500px' borderRadius={4} textAlign=\"center\" boxShadow='lg'>\r\n                    <Box textAlign=\"center\">\r\n                        <Heading fontWeight='extrabold' size='2xl' bgGradient=\"linear(to-r,red.500,red.300,blue.500)\" bgClip='text'>Edit Candidate</Heading>\r\n                    </Box>\r\n                    <Box my={8}>\r\n                        <form>\r\n                            <FormControl my={4} isRequired>\r\n                                <FormLabel>Name</FormLabel>\r\n\r\n                                <Input type='text' placeholder={name} \r\n                                    value={this.state.name} \r\n                                    onChange={(e)=>{this.setState({name:e.target.value})}}\r\n                                />\r\n                                <FormLabel>Email Adddress</FormLabel>\r\n                                <Input type=\"email\" placeholder={email} \r\n                                    value={this.state.email} \r\n                                    onChange={(e)=>{this.setState({email:e.target.value})}}\r\n                                 /> \r\n                                <FormLabel>Phone Number</FormLabel>\r\n                                <Input type='text' placeholder={number} \r\n                                     value={this.state.number} \r\n                                    onChange={(e)=>{this.setState({number:e.target.value})}}\r\n                                />\r\n                                <FormLabel>Interviewer Name</FormLabel>\r\n                                <Input type='text' placeholder={interviewer} \r\n                                     value={this.state.interviewer} \r\n                                    onChange={(e)=>{this.setState({interviewer:e.target.value})}}\r\n                                />\r\n                                <FormLabel>Time Of Interview</FormLabel>\r\n                                <Input type=\"time\" placeholder={timing} \r\n                                     value={this.state.timing} \r\n                                    onChange={(e)=>{this.setState({timing:e.target.value})}}\r\n                                />\r\n                                <FormLabel>Date Of Interview</FormLabel>\r\n                                <Input type='date' placeholder={date} \r\n                                     value={this.state.date} \r\n                                    onChange={(e)=>{this.setState({date:e.target.value})}}\r\n                                />\r\n                                \r\n                            </FormControl>\r\n                            {/* <Stack insetInline justifyContent='space-between' mt={4}>\r\n                                <HStack>\r\n                                    <Checkbox>Remember Me</Checkbox>\r\n                                </HStack>\r\n                            </Stack> */}\r\n                            <Button width='full' mt={4} colorScheme=\"teal\" variant=\"solid\" onClick={()=>{this.display(status)}}>\r\n                                Edit component\r\n                            </Button>\r\n                        </form>\r\n                    </Box>\r\n                    </Box>\r\n                </Flex>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps =(state)=>{\r\n    return{\r\n        data:state,\r\n    }\r\n}\r\nconst mapDispatchToProps=(dispatch)=>{\r\n    return{\r\n        change:(data)=>{dispatch(editContact(data))}\r\n    }\r\n}\r\nexport default compose(withRouter,connect(mapStateToProps,mapDispatchToProps))(EditContact);","import DarkModeSwitch from './Component/DarkModeSwitch'\nimport { Route,Switch } from 'react-router';\nimport Home from './Component/Home';\nimport AddContact from './Component/AddContact';\nimport EditContact from './Component/EditContact';\n\nimport 'react-toastify/dist/ReactToastify.css';\nimport {toast} from 'react-toastify';\ntoast.configure();\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <DarkModeSwitch/>\n      <Switch>\n        <Route  exact path=\"/\"   component={()=><Home/>}></Route>\n        <Route  path=\"/add\"  component={()=><AddContact/>}></Route>\n        <Route  path=\"/edit/:email\"  component={()=><EditContact/>}></Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState=[\r\n    {name:\"Ayush Singh\",email:\"tejasvasingh.83@gmail.com\",date:\"2021-07-14\",number:9161463059,timing:\"09:00\",interviewer:\"snehalata\",status:false},\r\n    {name:\"Ritu Singh\",email:\"ritu@gmail.com\",date:\"2021-08-23\",number:9161789789,timing:\"10:00\",interviewer:\"karan sharma\",status:false},\r\n    {name:\"Alok Singh\",email:\"alok123@gmail.com\",date:\"2021-07-14\",number:9161234876,timing:\"09:00\",interviewer:\"snehalata\",status:true},\r\n];\r\nconst contextReducer = (state=initialState,action)=>{\r\n    console.log(action);\r\n    switch(action.type){\r\n        case \"ADD_CANDIDTATE\" :\r\n            console.log(action.payload)\r\n            return [...state,action.payload];\r\n        case \"DELETE_CONTACT\":\r\n            const res=state.filter(\r\n                (row) =>row.email !== action.payload\r\n            );\r\n            return res;\r\n        case \"EDIT_CONTACT\":\r\n            var idx=null;\r\n            state.forEach(\r\n                (row,i)=>{\r\n                    if(row.email===action.payload.prev_email){\r\n                        idx=i;\r\n                    }\r\n                }\r\n            )\r\n            const ans=[...state];\r\n            ans[idx]=action.payload.edited_data;\r\n            return ans;\r\n        case \"EDIT_STATUS\":\r\n            console.log(\"ayush\"+action.payload)\r\n            var idx1=null;\r\n            state.forEach(\r\n                (row,i)=>{\r\n                    if(row.email===action.payload){\r\n                        idx1=i;\r\n                    }\r\n                }\r\n            )\r\n            const ans2=[...state];\r\n            ans2[idx1].status=!ans2[idx1].status;\r\n            return ans2;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default contextReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { ChakraProvider } from \"@chakra-ui/react\"\n//importing routig\nimport  {BrowserRouter as Router} from \"react-router-dom\";\nimport {ColorModeScript } from \"@chakra-ui/react\"\n\n//redux\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\nimport contextReducer from './Redux/Reducer/contextReducer';\nconst store=createStore(contextReducer)\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <ChakraProvider>\n          <ColorModeScript initialColorMode=\"light\"/>\n        <App />\n      </ChakraProvider>\n    </Router>\n  </Provider>\n    \n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}